/*
 * File: ProcessCaller.java  2008/05/09 10:54:31
 * User: Italo Maragliano Gonzalez (Tesoreria General de la Republica)
 *
 * This file was generated by "OBCOM SQL Wizard" version 5.1.228.
 * Copyright (c) OBCOM INGENIERIA S.A. (Chile) All rights reserved.
 * OBCOM PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.
 *
 * DO NOT EDIT THIS FILE <<Signature:EAtXg+cxsdwuZAZGcxGiFz>>.
 */

package cl.tesoreria.adf.adfprocedure;

import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.Types;
import java.util.ArrayList;
import javax.sql.DataSource;
import javax.sql.RowSet;

/**
 * Implements a caller of procedure "DISPATCH$PROCESS".
 */
public class ProcessCaller extends ProcedureCaller
{
    /**
     * Executes procedure "DISPATCH$PROCESS".
     *
     * TOUPLESTGF         VARCHAR2(4000)     Input
     * CONTEXTTGFIN       VARCHAR2(4000)     Input
     * ITEMS_OUT          VARCHAR2(4000)     Output
     * CONTEXTTGFOUT      VARCHAR2(4000)     Output
     * MESSAGESTGF        VARCHAR2(4000)     Output
     * RESULTADO          NUMBER             Output
     */
    public static ProcessResult execute(DataSource dataSource, String touplestgf, String contexttgfin)
        throws java.sql.SQLException
    {
        ProcessResult result = new ProcessResult();
        Connection conn = dataSource.getConnection();
        try
        {
            ArrayList resultSets = new ArrayList();
            CallableStatement call = conn.prepareCall("{call ECUSQL.DISPATCH$PROCESS(?,?,?,?,?,?)}");
            try
            {
                call.setString(1, touplestgf);
                call.setString(2, contexttgfin);
                call.registerOutParameter(3, Types.VARCHAR);
                call.registerOutParameter(4, Types.VARCHAR);
                call.registerOutParameter(5, Types.VARCHAR);
                call.registerOutParameter(6, Types.NUMERIC);
                int updateCount = 0;
                boolean haveRset = call.execute();
                while (haveRset || updateCount != -1)
                {
                    if (!haveRset)
                        updateCount = call.getUpdateCount();
                    else
                        resultSets.add(toRowSet(call.getResultSet()));
                    haveRset = call.getMoreResults();
                }
                result.setItemsOut(call.getString(3));
                result.setContexttgfout(call.getString(4));
                result.setMessagestgf(call.getString(5));
                result.setResultado(call.getBigDecimal(6));
            }
            finally
            {
                call.close();
            }
            if (resultSets.size() > 0)
            {
                RowSet[] rowSets = new RowSet[resultSets.size()];
                result.setRowSets((RowSet[]) resultSets.toArray(rowSets));
            }
        }
        finally
        {
            conn.close();
        }
        return result;
    }
}

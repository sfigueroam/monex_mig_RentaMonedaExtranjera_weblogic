/*
 * File: ProcedureCaller.java  2008/05/09 10:54:31
 * User: Italo Maragliano Gonzalez (Tesoreria General de la Republica)
 *
 * This file was generated by "OBCOM SQL Wizard" version 5.1.228.
 * Copyright (c) OBCOM INGENIERIA S.A. (Chile) All rights reserved.
 * OBCOM PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.
 *
 * DO NOT EDIT THIS FILE <<Signature:1S8xBZtl+7P6YliPDLGkOI>>.
 */

package cl.tesoreria.adf.adfprocedure;

import java.sql.ResultSet;
import javax.sql.RowSet;
import javax.sql.rowset.CachedRowSet;
import com.sun.rowset.CachedRowSetImpl;
//import weblogic.jdbc.rowset.RowSetFactory;
//import weblogic.jdbc.rowset.WLCachedRowSet;

/**
 * Implements methods common to all procedure callers.
 */
public abstract class ProcedureCaller
{
    // The same as oracle.jdbc.OracleTypes.CURSOR
    protected static final int ORACLE_CURSOR = -10;

    //------------------------------------------------------------
    //-- ResultSet methods ---------------------------------------
    //------------------------------------------------------------

    /**
     * Builds a RowSet from the supplied ResultSet.
     */
    protected static RowSet toRowSet(ResultSet resultSet)
        throws java.sql.SQLException
    {
    	//RowSetFactory factory = RowSetFactory.newInstance();
    	//WLCachedRowSet rowSet = factory.newCachedRowSet();
    	CachedRowSet rowSet = new CachedRowSetImpl();
        rowSet.populate(resultSet);
        return rowSet;
    }
}
